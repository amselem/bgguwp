<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BggUwp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:BggUwp.ViewModels" 
    xmlns:cnv="using:BggUwp.Common.Converters"
    xmlns:controls="using:BggUwp.Controls"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ff="using:FFImageLoading"
    x:Class="BggUwp.Views.BoardGamePage"
    mc:Ignorable="d"
    d:DesignHeight="900">

    <Page.Resources>
        <cnv:ListToStringConverter x:Name="ListToStringConverter" />
        <cnv:IntToGridStarNotationConverter x:Name="IntToGridStarNotationConverter" />
        <cnv:RatingColorConverter x:Name="RatingColorConverter" />
        <cnv:NullValueConverter NullString="N/A" x:Name="NullValueConverter" />
        <DataTemplate x:Key="PlayerPollTemplate">
            <Grid Height="12" Margin="0,3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="{Binding BestPercentage, Converter={StaticResource IntToGridStarNotationConverter}}"/>
                    <ColumnDefinition Width="{Binding RecommendedPercentage, Converter={StaticResource IntToGridStarNotationConverter}}"/>
                    <ColumnDefinition Width="{Binding NotRecommendedPercentage, Converter={StaticResource IntToGridStarNotationConverter}}"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Text="{Binding NumberOfPlayersDisplay}" VerticalAlignment="Center" Width="20"/>
                <Grid Grid.Column="1" Background="#FF64E600" />
                <Grid Grid.Column="2" Background="#FF26619C" />
                <Grid Grid.Column="3" Background="#FFF2F2F2" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Page.DataContext>
        <vm:BoardGamePageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Name="RemoveAppBarButton" Icon="Remove" Label="remove from collection" Command="{Binding RemoveCommand}"/>
                <AppBarButton x:Name="ViewOnBggAppBarButton" Icon="World" Label="view on BGG" Command="{Binding GoToBggCommand}"/>
            </CommandBar.SecondaryCommands>
            <CommandBar.Content>
                <Grid/>
            </CommandBar.Content>
            <AppBarButton x:Name="AddAppBarButton" Icon="Add" Label="add" Command="{Binding AddCommand}" Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=Self}}"/>
            <AppBarButton x:Name="EditAppBarButton" Icon="Edit" Label="edit" Click="Edit_Click" Visibility="{Binding IsInCollection, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <AppBarButton x:Name="LogPlayAppBarButton" Icon="AddFriend" Label="log play" Click="LogPlay_Click"/>
        </CommandBar>
    </Page.BottomAppBar>

    <ScrollViewer>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Interface">
                <VisualState x:Name="Snapped">
                    <VisualState.Setters>
                        <Setter Target="InfoTable.(RelativePanel.Below)" Value="CoverImage"/>
                        <Setter Target="CollectionItemInfo.(RelativePanel.Below)" Value="Description"/>
                        <Setter Target="Description.(RelativePanel.Below)" Value="PlayersCountPoll"/>
                        <Setter Target="openDescription.(ToggleButton.IsChecked)" Value="False"/>
                        <Setter Target="InfoTable.(RelativePanel.RightOf)" Value=""/>
                        <Setter Target="Description.(RelativePanel.RightOf)" Value=""/>
                        <Setter Target="openDescription.(UIElement.Visibility)" Value="Visible"/>
                        <Setter Target="InfoTable.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,10,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="PlayersCountPoll.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,10,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="CollectionItemInfo.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,10,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="CoverImage.(RelativePanel.AlignLeftWithPanel)" Value="True"/>
                        <Setter Target="CoverImage.(RelativePanel.AlignRightWithPanel)" Value="True"/>
                        <Setter Target="InfoTable.(RelativePanel.AlignLeftWith)" Value="CoverImage"/>
                        <Setter Target="InfoTable.(RelativePanel.AlignRightWith)" Value="CoverImage"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Narow">
                    <VisualState.Setters>
                        <Setter Target="Description.(RelativePanel.Below)" Value="CoverImage"/>
                        <Setter Target="Description.(RelativePanel.AlignLeftWith)" Value="CoverImage"/>
                        <Setter Target="Description.(RelativePanel.AlignRightWith)" Value="CoverImage"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="650"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.Setters>
                        <Setter Target="RatingBoxes.(RelativePanel.Below)" Value="Cover"/>
                        <Setter Target="RatingBoxes.(StackPanel.Orientation)" Value="Horizontal"/>
                        <Setter Target="RankBorder.(FrameworkElement.Width)" Value="70"/>
                        <Setter Target="AverageRatingBorder.(FrameworkElement.Width)" Value="70"/>
                        <Setter Target="UserRatingBorder.(FrameworkElement.Width)" Value="70"/>
                        <Setter Target="RatingBoxes.(RelativePanel.AlignLeftWith)" Value="Cover"/>
                        <Setter Target="RatingBoxes.(RelativePanel.AlignRightWith)" Value="Cover"/>
                        <Setter Target="RankBorder.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>5,5,5,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="AverageRatingBorder.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>5,5,5,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="UserRatingBorder.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>5,5,5,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="textBlock.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0,0,10,0</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="Header" Grid.Row="0" Background="{StaticResource BGGHeaderBlue}" Padding="10,0,0,0">
                <TextBlock Text="{Binding CurrentBoardGame.BoardGameName}" Foreground="White" FontSize="18" VerticalAlignment="Center"/>
            </Grid>

            <controls:EditItemDialog x:Name="CurrentEditDialog" DataContext="{Binding EditDialogVM}" d:IsHidden="True" />
            <controls:LogPlayDialog x:Name="CurrentLogPlayDialog" DataContext="{Binding LogPlayDialogVM}" d:IsHidden="True" />

            <Grid x:Name="Content" Grid.Row="1" Padding="10,10,10,0">
                <RelativePanel Name="ContentRelative">
                    <RelativePanel Name="CoverImage">
                        <!--<Image Name="Cover" HorizontalAlignment="Right" VerticalAlignment="Bottom"  MaxHeight="250">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding CurrentBoardGame.ImageWebLink, FallbackValue=ms-appx:///Assets/SampleCoverPicHD.jpg}"
                                    DecodePixelType="Logical" DecodePixelHeight="250" CreateOptions="None"/>
                            </Image.Source>
                        </Image>-->
                        <ff:FFImage 
                            Name="Cover"
                            MaxHeight="250"
                            HorizontalAlignment="Right"
                            CacheDuration="30"
                            DownsampleMode="High" 
                            DownsampleUseDipUnits="True"
                            DownsampleToViewSize="False"
                            DownsampleHeight="300"
                            LoadingPlaceholder="SampleCoverPicHD.jpg"
                            Source="{Binding CurrentBoardGame.ImageWebLink, Mode=OneWay, FallbackValue=ms-appx:///Assets/SampleCoverPicHD.jpg}" />
                        <StackPanel x:Name="RatingBoxes" HorizontalAlignment="Stretch" Padding="5,0,0,0" RelativePanel.RightOf="Cover">
                            <Border x:Name="RankBorder" Height="70" BorderThickness="1" BorderBrush="{StaticResource DarkerGreyBorder}" VerticalAlignment="Bottom" Margin="0,0,0,5">
                                <Grid Background="{StaticResource BGGGrey}" Padding="5,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.RowSpan="2" FontSize="14.667" Foreground="{StaticResource BGGTextGrey}">
									    <Run Text="BGG"/>
									    <LineBreak/>
									    <Run Text="rank"/>
                                    </TextBlock>
                                    <TextBlock Grid.Row="1" Text="{Binding CurrentBoardGame.Rank, Mode=OneWay}" FontSize="26.667" Foreground="Black" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                            <Border x:Name="AverageRatingBorder" Height="70" BorderThickness="1" BorderBrush="{StaticResource DarkerGreyBorder}" VerticalAlignment="Bottom" Margin="0,0,0,5">
                                <Grid Background="{StaticResource BGGGrey}" Padding="5,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.RowSpan="2" FontSize="14.667" Foreground="{StaticResource BGGTextGrey}">
									    <Run Text="average"/>
									    <LineBreak/>
									    <Run Text="rating"/>
                                    </TextBlock>
                                    <TextBlock Grid.Row="1" Text="{Binding CurrentBoardGame.AverageRating, ConverterParameter=\{0:#0.00\}, Converter={StaticResource StringFormatConverter}}" FontSize="26.667" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                            <Border x:Name="UserRatingBorder" Height="70" BorderThickness="1" BorderBrush="{Binding CurrentCollectionItem.UserRating, ConverterParameter=36, Converter={StaticResource RatingColorConverter}, FallbackValue={StaticResource DarkerGreyBorder}}" VerticalAlignment="Bottom" Margin="0,0,0,5">
                                <Grid x:Name="UserRatingGrid" Background="{Binding CurrentCollectionItem.UserRating, ConverterParameter=90, Converter={StaticResource RatingColorConverter}, FallbackValue={StaticResource BGGGrey}}" Padding="5,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.RowSpan="2" FontSize="14.667" Foreground="{StaticResource BGGTextGrey}">
									    <Run Text="your"/>
									    <LineBreak/>
									    <Run Text="rating"/>
                                    </TextBlock>
                                    <TextBlock x:Name="UserRatingValue" Grid.Row="1" Text="{Binding CurrentCollectionItem.UserRating, Converter={StaticResource NullValueConverter}}" FontSize="26.667" Foreground="{Binding CurrentCollectionItem.UserRating, ConverterParameter=30, Converter={StaticResource RatingColorConverter}}" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </RelativePanel>

                    <StackPanel Name="InfoTable" Margin="20,10,20,0" MinWidth="300" RelativePanel.RightOf="CoverImage">
                        <Border Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="designer" Foreground="{StaticResource BGGTextGrey}"/>
                                <TextBlock Grid.Column="1" Text="{Binding CurrentBoardGame.Designers, Converter={StaticResource ListToStringConverter}}" TextWrapping="Wrap"/>
                            </Grid>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="artist" Foreground="{StaticResource BGGTextGrey}"/>
                            <TextBlock Grid.Column="1" Text="{Binding CurrentBoardGame.Artists, Converter={StaticResource ListToStringConverter}}" TextWrapping="Wrap"/>
                        </Grid>
                        <Border Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="publisher" Foreground="{StaticResource BGGTextGrey}"/>
                                <TextBlock Grid.Column="1" Text="{Binding CurrentBoardGame.Publishers, Converter={StaticResource ListToStringConverter}}" TextWrapping="Wrap" />
                            </Grid>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="# of players" Foreground="{StaticResource BGGTextGrey}"/>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding CurrentBoardGame.MinPlayers}"/>
                                <TextBlock Grid.Column="1" Text="-" Margin="2,0"/>
                                <TextBlock Grid.Column="2" Text="{Binding CurrentBoardGame.MaxPlayers}"/>
                            </Grid>
                        </Grid>
                        <Border Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="duration" Foreground="{StaticResource BGGTextGrey}"/>
                                <TextBlock Grid.Column="1" Text="{Binding CurrentBoardGame.PlayingTime, ConverterParameter=\{0\} minutes, Converter={StaticResource StringFormatConverter}}" TextWrapping="Wrap" />
                            </Grid>
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="your plays" Foreground="{StaticResource BGGTextGrey}"/>
                            <TextBlock Grid.Column="1" Text="{Binding CurrentCollectionItem.NumberOfPlays}" TextWrapping="Wrap"/>
                        </Grid>
                        <Border Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="rules" Foreground="{StaticResource BGGTextGrey}"/>
                                <!--<HyperlinkButton Grid.Column="1" NavigateUri="{Binding RulesLink}" Content="PDF (English)"/>-->
                                <TextBlock Grid.Column="1">
								<Span xml:space="preserve"><Hyperlink NavigateUri="{Binding RulesLink}"><Run Text="PDF (English)"/></Hyperlink></Span>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </StackPanel>

                    <ItemsControl Name="PlayersCountPoll" RelativePanel.Below="InfoTable"
                                  ItemsSource="{Binding CurrentBoardGame.PlayerPollResults}" Margin="20,10,20,0" ItemTemplate="{StaticResource PlayerPollTemplate}" 
                                  RelativePanel.AlignLeftWith="InfoTable" RelativePanel.AlignRightWith="InfoTable">
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>

                    <StackPanel Name="Description" RelativePanel.RightOf="InfoTable">
                        <ToggleButton x:Name="openDescription" Style="{StaticResource ExpanderHeaderToggleButtonStyle}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Content="Description" IsChecked="True" Visibility="Collapsed" >
                            <!--<Interactivity:Interaction.Behaviors>
                            <Core:DataTriggerBehavior Binding="{Binding IsInCollection, FallbackValue=True, Mode=TwoWay, TargetNullValue=True}" Value="True" ComparisonCondition="NotEqual">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=openDescription}" PropertyName="IsChecked" Value="True"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=openDescription}" PropertyName="Foreground" Value="{StaticResource BGGTextGrey}"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>-->
                        </ToggleButton>
                        <TextBlock x:Name="textBlock" Text="{Binding CurrentBoardGame.Description}" TextWrapping="WrapWholeWords" MaxWidth="500" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=openDescription}" />
                    </StackPanel>

                    <Grid Name="CollectionItemInfo"
                          Margin="20,10,20,0" Visibility="{Binding IsInCollection, Converter={StaticResource BooleanToVisibilityConverter}}" RelativePanel.AlignLeftWith="InfoTable" RelativePanel.AlignRightWith="InfoTable" RelativePanel.Below="PlayersCountPoll">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="owned" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding CurrentCollectionItem.Owned, Mode=TwoWay}" IsEnabled="False" Style="{StaticResource CheckBoxInfoStyle}"/>
                                </Grid>
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="for trade" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding CurrentCollectionItem.ForTrade, Mode=TwoWay}" IsEnabled="False" Style="{StaticResource CheckBoxInfoStyle}"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="want to play" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding CurrentCollectionItem.WantToPlay, Mode=TwoWay}" IsEnabled="False" Style="{StaticResource CheckBoxInfoStyle}"/>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="want to buy" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                <CheckBox Grid.Column="1" IsChecked="{Binding CurrentCollectionItem.WantToBuy, Mode=TwoWay}" IsEnabled="False" Style="{StaticResource CheckBoxInfoStyle}"/>
                            </Grid>
                        </Grid>
                        <Border Grid.Row="2" Margin="0" Background="{StaticResource LightBackground}" BorderBrush="{StaticResource LightBackgroundBorder}" BorderThickness="0,1">
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="wishlist" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                    <CheckBox x:Name="WishlistBox" Grid.Column="1" IsChecked="{Binding CurrentCollectionItem.Wishlist, Mode=TwoWay}" IsEnabled="False" Style="{StaticResource CheckBoxInfoStyle}"/>
                                </Grid>
                                <Grid Grid.Column="1" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=WishlistBox}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="wishlist priority" VerticalAlignment="Center" Foreground="{StaticResource BGGTextGrey}"/>
                                    <TextBlock Grid.Column="1" Text="{Binding CurrentCollectionItem.WishlistPriority}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </RelativePanel>
            </Grid>
        </Grid>
    </ScrollViewer>
</Page>
